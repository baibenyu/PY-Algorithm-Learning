# __project_ = 'reptile'
# __author_ = 'baibe'
# __time_ = '2022/6/9 15:28'

import time

if __name__ == '__main__':
    start = time.perf_counter()
    """
    1.找到数组中当前值离最近的左边和右边的大值
    解:单调递减栈,遇到重复值时在栈中处于相同位置
    2.找到数组中,子数组的指标A的最大值,数组中的值均为正数
    指标A:数组中累积和与最小值的乘积
    解:问题转化->每个最小值都是数组中的最小值,即最小值不可改变->乘积在最小值不变的情况下,只能尽可能增加数组的长度->数组的长度受到最小值的限制,
    即左右边界之外的那个数都应该小于最小值,即找到离此时最小值最近的小值->即单调递增栈
    """
    end = time.perf_counter()
    print(end - start)
