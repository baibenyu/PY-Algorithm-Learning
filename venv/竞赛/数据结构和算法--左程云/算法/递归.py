# __project_ = 'reptile'
# __author_ = 'baibe'
# __time_ = '2022/6/7 9:23'

import time

if __name__ == '__main__':
    start = time.perf_counter()
    """
    1.汉诺塔问题
    解:分解问题-->把除最大以外的所有圆盘移动到非目的地,再把最大移动到目的地,此时剩下的未抵达目的地的圆盘可视为数量-1后的完全相同的子问题,再把剩下的圆盘移动到目的地
    2.打印字符串的所有子序列(子集)
    解:递归时同时走,选与不选当前字符,两条路
    3.打印全排列
    解:[1]--回溯,设定一个i值,0-i-1都是已经选过的值,i之后都是尚未选择的值,所以在递归过程中将选的值与i交换,就能保证对下一层递归
    [2]--回溯,每选取一个数就将这个数排除出待选名单,直至选完完整一组后再加回来
    4.预测赢家
    解:定义两个函数,一个先手函数,一个后手函数,当且仅当只剩下一个数字时无需选择
    5.逆序栈--仅通过递归实现逆序栈
    解:定义一个取栈底的函数,再定义一个压栈函数
    6.数字转字符串--1->A等等
    解:两种策略划分子问题,字符串可能由1个或2个数字转化而成,遇到0开头说明不可能成立,走到长度说明找到一种
    7.01背包
    解:略
    8.N皇后
    解:略--优化将下一行的可选位置提前圈出,即先排除左右斜线和列,转变为位运算,传递限制信息
    """
    end = time.perf_counter()
    print(end - start)
